from aiogram import Router, F
from aiogram.filters import CommandStart
from aiogram.fsm.context import FSMContext
from aiogram.fsm.state import State, StatesGroup
from aiogram.types import Message, CallbackQuery

import app.keyboards as kb
from app.funcs import get_weather

"""
–ú–æ–¥—É–ª—å —Å –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∞–º–∏ –∫–æ–º–∞–Ω–¥ –∏ —Å–æ–æ–±—â–µ–Ω–∏–π –¥–ª—è –±–æ—Ç–∞.

–û–ø–∏—Å–∞–Ω–∏–µ:
- City: –ö–ª–∞—Å—Å —Å–æ—Å—Ç–æ—è–Ω–∏–π –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å —Å–æ—Å—Ç–æ—è–Ω–∏—è–º–∏ FSM (–≤ –¥–∞–Ω–Ω–æ–º —Å–ª—É—á–∞–µ –≤–≤–æ–¥ –≥–æ—Ä–æ–¥–∞).
- cmd_start: –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /start, –æ—Ç–ø—Ä–∞–≤–ª—è–µ—Ç –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ.
- get_city: –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –¥–ª—è –∑–∞–ø—Ä–æ—Å–∞ –≥–æ—Ä–æ–¥–∞ —É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è.
- get_forecast: –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –¥–∞–Ω–Ω—ã—Ö –æ –ø–æ–≥–æ–¥–µ –ø–æ –≤–≤–µ–¥–µ–Ω–Ω–æ–º—É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º –≥–æ—Ä–æ–¥—É.
"""

router = Router()


class City(StatesGroup):
    city = State()


@router.message(CommandStart())
async def cmd_start(message: Message):
    await message.answer('–ü—Ä–∏–≤–µ—Ç, {name}üëã'
                         '\n–Ø –±–æ—Ç, –∫–æ—Ç–æ—Ä—ã–π –ø–æ–º–æ–∂–µ—Ç —Ç–µ–±–µ —É–∑–Ω–∞—Ç—å –∞–∫—Ç—É–∞–ª—å–Ω—É—é –ø–æ–≥–æ–¥—É –≤ –ª—é–±–æ–º –≥–æ—Ä–æ–¥–µ. üå§'
                         '\n–ü—Ä–æ—Å—Ç–æ –æ—Ç–ø—Ä–∞–≤—å –º–Ω–µ –Ω–∞–∑–≤–∞–Ω–∏–µ –≥–æ—Ä–æ–¥–∞, –∏ —è –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–ª—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ —Ç–µ–º–ø–µ—Ä–∞—Ç—É—Ä–µ, –≤–ª–∞–∂–Ω–æ—Å—Ç–∏ –∏ –¥—Ä—É–≥–∏—Ö –ø–æ–≥–æ–¥–Ω—ã—Ö —É—Å–ª–æ–≤–∏—è—Ö. ‚òîÔ∏èüåû!'.format(
        name=message.from_user.first_name
    ),
        reply_markup=kb.markup
    )


@router.callback_query(F.data == 'weather')
async def get_city(callback: CallbackQuery, state: FSMContext):
    await callback.answer('–í—ã–ø–æ–ª–Ω—è—é –∑–∞–ø—Ä–æ—Å..')
    await state.set_state(City.city)
    await callback.message.answer('–í–≤–µ–¥–∏—Ç–µ –Ω–∞–∑–≤–∞–Ω–∏–µ –≥–æ—Ä–æ–¥–∞:')


@router.message(City.city)
async def get_forecast(message: Message, state: FSMContext):
    weather_data = await get_weather(message.text)
    if weather_data:
        await message.reply(f'–ü–æ–≥–æ–¥–∞ –≤ –≥–æ—Ä–æ–¥–µ {message.text.title()}'
                            f'\n–¢–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞: {weather_data.get('temp')}'
                            f'\n–û—â—É—â–∞–µ—Ç—Å—è –∫–∞–∫: {weather_data.get('feels_like')}'
                            f'\n–°–∫–æ—Ä–æ—Å—Ç—å –≤–µ—Ç—Ä–∞: {weather_data.get('wind_speed')}'
                            f'\n–í–ª–∞–∂–Ω–æ—Å—Ç—å: {weather_data.get('humidity')}',
                            reply_markup=kb.markup)
    else:
        await message.reply('–ò–∑–≤–∏–Ω–∏—Ç–µ! –í–∞—à –≥–æ—Ä–æ–¥ –Ω–µ –Ω–∞–π–¥–µ–Ω!', reply_markup=kb.markup)
    await state.clear()
